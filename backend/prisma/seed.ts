import { PrismaClient } from '../src/generated/prisma';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Seeding database...');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const testUser = await prisma.users.upsert({
    where: { telegram_id: BigInt(123456789) },
    update: {},
    create: {
      telegram_id: BigInt(123456789),
      first_name: '–¢–µ—Å—Ç–æ–≤—ã–π',
      last_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      username: 'testuser',
      timezone: 'Europe/Moscow',
      settings: {
        notifications: true,
        reminderTime: '20:00',
      },
    },
  });

  console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', testUser.first_name);

  // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ü–µ–Ω–æ–∫ –Ω–µ–¥–µ–ª—å
  const weekStartDates = [
    new Date('2024-01-01'), // –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
    new Date('2024-01-08'),
    new Date('2024-01-15'),
    new Date('2024-01-22'),
  ];

  const ratings = [5, 3, 4, 2];
  const descriptions = [
    '–û—Ç–ª–∏—á–Ω–∞—è –Ω–µ–¥–µ–ª—è! –í—Å–µ –ø—Ä–æ—à–ª–æ –ø–æ –ø–ª–∞–Ω—É.',
    '–û–±—ã—á–Ω–∞—è –Ω–µ–¥–µ–ª—è, –±–µ–∑ –æ—Å–æ–±—ã—Ö —Å–æ–±—ã—Ç–∏–π.',
    '–•–æ—Ä–æ—à–∞—è –Ω–µ–¥–µ–ª—è, –±—ã–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã.',
    '–°–ª–æ–∂–Ω–∞—è –Ω–µ–¥–µ–ª—è, –º–Ω–æ–≥–æ –ø—Ä–æ–±–ª–µ–º.',
  ];

  for (let i = 0; i < weekStartDates.length; i++) {
    await prisma.weeklyRatings.upsert({
      where: {
        user_telegram_id_week_start_date: {
          user_telegram_id: testUser.telegram_id,
          week_start_date: weekStartDates[i],
        },
      },
      update: {},
      create: {
        user_telegram_id: testUser.telegram_id,
        week_start_date: weekStartDates[i],
        rating: ratings[i],
        description: descriptions[i],
        media_urls: [],
      },
    });
  }

  console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏ –Ω–µ–¥–µ–ª—å');

  // –°–æ–∑–¥–∞–µ–º –µ—â–µ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const secondUser = await prisma.users.upsert({
    where: { telegram_id: BigInt(987654321) },
    update: {},
    create: {
      telegram_id: BigInt(987654321),
      first_name: '–í—Ç–æ—Ä–æ–π',
      last_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      username: 'seconduser',
      timezone: 'UTC',
    },
  });

  // –û–¥–Ω–∞ –æ—Ü–µ–Ω–∫–∞ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  await prisma.weeklyRatings.upsert({
    where: {
      user_telegram_id_week_start_date: {
        user_telegram_id: secondUser.telegram_id,
        week_start_date: new Date('2024-01-01'),
      },
    },
    update: {},
    create: {
      user_telegram_id: secondUser.telegram_id,
      week_start_date: new Date('2024-01-01'),
      rating: 4,
      description: 'Great start of the year!',
      media_urls: [],
    },
  });

  console.log('‚úÖ –°–æ–∑–¥–∞–Ω –≤—Ç–æ—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –µ–≥–æ –æ—Ü–µ–Ω–∫–∞');

  console.log('üéâ Seeding completed successfully!');
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error('‚ùå Seeding error:', e);
    await prisma.$disconnect();
    process.exit(1);
  }); 
